---
title: "Take-home Exercise 1"
date: "January 17, 2024"
date-modified: "last-modified"
output: 
  html_document:
    css: styles.css 
execute: 
  eval: true
  echo: true
  warning: false
---

# **Project Brief**

OECD education director Andreas Schleicher shared in a BBC article that “Singapore managed to achieve excellence without wide differences between children from wealthy and disadvantaged families.” (2016) Furthermore, several Singapore’s Minister for Education also started an “every school a good school” slogan.

The general public, however, strongly belief that there are still disparities that exist, especially between the elite schools and neighborhood school, between students from families with higher socioeconomic status and those with relatively lower socioeconomic status and immigration and non-immigration families.

# Project Objectives

The 2022 Programme for International Student Assessment (PISA) data was released on December 5, 2022. PISA global education survey every three years to assess the education systems worldwide through testing 15 year old students in the subjects of mathematics, reading, and science.

In this take-home exercise, we are required to use appropriate Exploratory Data Analysis (EDA) methods and ggplot2 functions to reveal:

1.  the distribution of Singapore students’ performance in mathematics, reading, and science, and

2.  the relationship between these performances with schools, gender and socioeconomic status of the students.

Limit your submission to not more than five EDA visualisation.

# 1. Data Preparation

## 1.1 Installing R packages

pacman::p_load() function from the pacman package is used in the following code chunk to install and call the libraries of multiple R packages:

```{r}
pacman::p_load(tidyverse, haven, ggrepel, patchwork, 
               ggthemes, hrbrthemes)
```

## 1.2 Importing Dataset

"Student questionnaire data file" from the PISA 2022 database is provided for the task.

The code chunk below uses read_sas() of haven to import PISA data into R environment.

```{r}
#| eval: false
stu_qqq <- read_sas("../../data/STU_QQQ_SAS/cy08msp_stu_qqq.sas7bdat")
```

```{r}
#| eval: false
stu_qqq_SG <- stu_qqq %>%
  filter(CNT == "SGP")
```

```{r}
#| eval: false
write_rds(stu_qqq_SG,
          "../../data/STU_QQQ_SAS/stu_qqq_SG.rds")
```

We upload the file as stu_qqq_Sg.

```{r}
stu_qqq_Sg <-
  read_rds("../../data/STU_QQQ_SAS/stu_qqq_SG.rds")
```

## 1.3 Summary Statistics

We first display first 5 rows using head().

```{r}
head(stu_qqq_Sg, 5)
```

Then, we check the structure of stu_qqq_Sg.

```{r}
str(stu_qqq_Sg)
```

The dataset contains the Intl. School ID (CNTSCHID), Intl. Student ID (CNTSTUID), and Student (Standardized) Gender (ST004D01T) variables, which are currently kept as numeric data types. We will convert these to categorical data types due to the following reasons:

1.  The International School ID is a numerical designation used to uniquely identify various schools. The numbers lack inherent mathematical significance; they serve solely as designations.

2.  Comparable to school IDs, The International Student ID is a distinct identity assigned to each student, it should be regarded as a label.

3.  "Student (Standardized) Gender" represents gender and is characterized by discrete categories such as male or female rather than a numerical scale.

```{r}
stu_qqq_Sg$CNTSCHID <- as.factor(stu_qqq_Sg$CNTSCHID)
stu_qqq_Sg$CNTSTUID <- as.factor(stu_qqq_Sg$CNTSTUID)
stu_qqq_Sg$ST004D01T <- as.factor(stu_qqq_Sg$ST004D01T)
```

We proceed to check for duplicates.

```{r}
duplicate_rows <- stu_qqq_Sg[duplicated(stu_qqq_Sg),]
print(head(duplicate_rows))
```

The output \# A tibble: 0 × 1,279 indicates that there are zero rows in the resulting tibble. This means that no duplicate rows were found in dataset stu_qqq_Sg across all 1,279 variables.

Next, we proceed to check for missing values.

```{r}
# Count the total number of missing values in the dataset
total_na <- sum(is.na(stu_qqq_Sg))
print(total_na)
```

While there are numerous missing values in the dataset, our focus is primarily on specific columns. We're interested in the columns labeled:

-   CNTSCHID (International School ID)

-   CNTSTUID (International Student ID)

-   ST004D01T (Student Standardized Gender)

-   HISEI (Highest parental occupational status based on 4-digit human coded ISCO)

-   ESCS (Index of economic, social and cultural status)

and a series of columns related to plausible values in different subjects. These subjects include:

-   Mathematics (PV1MATH to PV10MATH)

-   Reading (PV1READ to PV10READ)

-   Science (PV1SCIE to PV10SCIE)

We'll examine these columns for missing data, as they are relevant to our analysis.

We can use the select function from the dplyr package to extract the specific columns.

```{r}
library(dplyr)

# Selecting specific columns explicitly
selected_columns <- stu_qqq_Sg %>%
  select(CNTSCHID, CNTSTUID, ST004D01T,
         HISEI, ESCS,
         PV1MATH, PV2MATH, PV3MATH, PV4MATH, PV5MATH, PV6MATH, PV7MATH, PV8MATH, PV9MATH, PV10MATH,
         PV1READ, PV2READ, PV3READ, PV4READ, PV5READ, PV6READ, PV7READ, PV8READ, PV9READ, PV10READ,
         PV1SCIE, PV2SCIE, PV3SCIE, PV4SCIE, PV5SCIE, PV6SCIE, PV7SCIE, PV8SCIE, PV9SCIE, PV10SCIE)

# Count the number of missing values per selected column
na_per_selected_column <- colSums(is.na(selected_columns))

# Printing the number of missing values per selected column
print(na_per_selected_column)
```

The counts of missing values for the variables in question are as follows:

-   Highest Parental Occupational Status (HISEI): 310 missing values

-   Index of economic, social and cultural status (ESCS): 47 missing values

To ensure our analysis is accurate, we're going to remove these incomplete rows from our dataset.

# 2. Data Wrangling

## 2.1 Calculate average plausible values for each student

We calculate each student's average plausible values for each subject, condensing multiple data points into one representative score per subject. This simplification aids in analyzing the distribution of performances across different subjects in Singapore.

```{r}
library(dplyr)

# Calculate the mean PV scores for each student in each subject
student_avg_scores <- stu_qqq_Sg %>%
  mutate(
    AvgMathPV = rowMeans(select(., starts_with("PV1MATH"):starts_with("PV10MATH")), na.rm = TRUE),
    AvgReadPV = rowMeans(select(., starts_with("PV1READ"):starts_with("PV10READ")), na.rm = TRUE),
    AvgSciePV = rowMeans(select(., starts_with("PV1SCIE"):starts_with("PV10SCIE")), na.rm = TRUE)
  )

# View the student level averages
print(student_avg_scores)
```

## 2.2 Consolidate individual student performance data into school-wide metrics

We compute the average of plausible value (PV) scores for each subject at the school level. The steps to accomplish this in R include:

1.  Aggregation of PV Scores per Subject

    -   Start by determining the average PV scores for every student by taking the mean across the ten plausible values for Mathematics, Reading, and Science respectively.

2.  Consolidation by School

    -   Organize the dataset around the International School ID (CNTSCHID) to group students according to their school.

3.  School-Level Averages

    -   For each group representing a school, compute the mean of these individual averages. This results in a single average score that represents the collective performance of students in each subject for that school.

```{r}
library(dplyr)

# Calculate the mean PV scores for each student in each subject
stu_qqq_Sg <- stu_qqq_Sg %>%
  mutate(AvgMathPV = rowMeans(select(., starts_with("PV1MATH"):starts_with("PV10MATH")), na.rm = TRUE),
         AvgReadPV = rowMeans(select(., starts_with("PV1READ"):starts_with("PV10READ")), na.rm = TRUE),
         AvgSciePV = rowMeans(select(., starts_with("PV1SCIE"):starts_with("PV10SCIE")), na.rm = TRUE))

# Group by school ID and calculate the mean of the student averages for each school
school_avg_scores <- stu_qqq_Sg %>%
  group_by(CNTSCHID) %>%
  summarise(AvgMathScore = mean(AvgMathPV, na.rm = TRUE),
            AvgReadScore = mean(AvgReadPV, na.rm = TRUE),
            AvgScieScore = mean(AvgSciePV, na.rm = TRUE))

# View the school level averages
print(school_avg_scores)
```

## 2.3 Gender Labeling

Here, we label genders and calculate average PV Scores per subject for each student.

```{r}
library(dplyr)

# Assuming 'stu_qqq_Sg' is your data frame, 'CNTSTUID' is the column with International Student IDs,
# and 'ST004D01T' is the column with Student Standardized Gender (1 for female; 0 for male)

# Calculate the mean PV scores for each student in each subject and map gender numeric values to labels
gender_avg_scores <- stu_qqq_Sg %>%
  mutate(
    Gender = ifelse(ST004D01T == 1, "Female", "Male"),
    AvgMathPV = rowMeans(select(., starts_with("PV1MATH"):starts_with("PV10MATH")), na.rm = TRUE),
    AvgReadPV = rowMeans(select(., starts_with("PV1READ"):starts_with("PV10READ")), na.rm = TRUE),
    AvgSciePV = rowMeans(select(., starts_with("PV1SCIE"):starts_with("PV10SCIE")), na.rm = TRUE)
  )

# Now, 'gender_avg_scores' contains the individual student's data with their gender and average scores
print(gender_avg_scores)
```

## 2.4 Create clean HISEI and ESCS dataframes

As mentioned earlier, we'll create a new dataframe for HISEI where any row with a missing HISEI value is removed. This will reduce our dataset by 310 rows.

```{r}
# Assuming 'stu_qqq_Sg' is your original data frame

# Creating a data frame for HISEI
df_hisei <- stu_qqq_Sg %>%
  filter(!is.na(HISEI)) %>%
  mutate(
    AvgMathPV = rowMeans(select(., starts_with("PV1MATH"), starts_with("PV10MATH")), na.rm = TRUE),
    AvgReadPV = rowMeans(select(., starts_with("PV1READ"), starts_with("PV10READ")), na.rm = TRUE),
    AvgSciePV = rowMeans(select(., starts_with("PV1SCIE"), starts_with("PV10SCIE")), na.rm = TRUE)
  )

print(df_hisei)
```

For ESCS, We'll make another dataframe where we remove rows missing ESCS values. This will decrease the dataset by 47 rows.

```{r}
library(dplyr)

# Assuming 'stu_qqq_Sg' is your original data frame

# Creating a data frame for ESCS
df_escs <- stu_qqq_Sg %>%
  filter(!is.na(ESCS)) %>%
  mutate(
    AvgMathPV = rowMeans(select(., starts_with("PV1MATH"), starts_with("PV10MATH")), na.rm = TRUE),
    AvgReadPV = rowMeans(select(., starts_with("PV1READ"), starts_with("PV10READ")), na.rm = TRUE),
    AvgSciePV = rowMeans(select(., starts_with("PV1SCIE"), starts_with("PV10SCIE")), na.rm = TRUE)
  )

print(df_escs) 
```

# 3. Exploratory Data Analysis

## 3.1 Distribution of Average Plausible Values by Students in Singapore

```{r}
library(tidyverse)
library(hrbrthemes)
library(viridis)
library(forcats)

# Reshape the data to long format
student_avg_long <- student_avg_scores %>%
  pivot_longer(
    cols = c(AvgMathPV, AvgReadPV, AvgSciePV),
    names_to = "subject",
    values_to = "value"
  )

# Replace the subject names with more readable names if necessary
student_avg_long$subject <- recode(student_avg_long$subject,
                                   AvgMathPV = "Mathematics",
                                   AvgReadPV = "Reading",
                                   AvgSciePV = "Science")

# Create the ggplot object with larger axis title texts
p <- student_avg_long %>%
  ggplot(aes(x = value, fill = subject)) +
  geom_histogram(binwidth = 10, alpha = 1) +  # Full opacity
  scale_fill_manual(values = c("Mathematics" = "darkblue", "Reading" = "orange", "Science" = "darkgreen")) +
  facet_wrap(~subject, scales = "free_x", ncol = 3) +
  labs(
    title = 'Distribution of Average Plausible Values for Each Subject',
    x = 'Average Plausible Values',
    y = 'Count of Students'
  ) +
  theme_ipsum(base_size = 16) +  # Increase base font size
  theme(
    plot.title = element_text(hjust = 0.5, size = 20),  # Center and increase plot title size
    axis.title.x = element_text(hjust = 0.5, size = 14),  # Center and increase x-axis title size
    axis.title.y = element_text(hjust = 0.5, size = 14),  # Center and increase y-axis title size
    strip.text = element_text(hjust = 0.5),  # Center the facet labels
    legend.position = "none",
    panel.spacing = unit(0.1, "lines"),
    axis.text.x = element_text(size = 14),   # Increase x-axis tick label size
    axis.text.y = element_text(size = 14),   # Increase y-axis tick label size
    axis.ticks.y = element_line(color = "black"),
    panel.grid.major.y = element_line(colour = "grey90"),  # Specify color for horizontal grid lines
    panel.grid.major.x = element_blank(),  # Remove vertical grid lines
    panel.grid.minor.x = element_blank(),  # Remove minor vertical grid lines
    # Ensure the axis text and ticks for the non-leftmost panels are removed
    axis.text.y.right = element_blank(),
    axis.ticks.y.right = element_blank()
  )

# Print the plot
p
```

For each subject represented in the histograms, the scores predominantly converge around a central peak, indicative of the mode — the score range that most students fall into. The distribution patterns reveal a diminished number of students attaining scores at both extremities of the spectrum, either very high or very low. This results in a bell-shaped curve, reflecting a typical distribution where scores are most densely populated near the central value.

## 3.2 Distribution of Average Plausible Values by School

```{r}
library(tidyverse)
library(hrbrthemes)
library(viridis)
library(forcats)

# Rank schools by AvgMathScore, AvgReadScore, and AvgScieScore and add labels for top and bottom schools
school_avg_scores <- school_avg_scores %>%
  mutate(
    RankMath = rank(-AvgMathScore),
    RankRead = rank(-AvgReadScore),
    RankScie = rank(-AvgScieScore),
    LabelMath = ifelse(RankMath == 1 | RankMath == n(), as.character(CNTSCHID), NA),
    LabelRead = ifelse(RankRead == 1 | RankRead == n(), as.character(CNTSCHID), NA),
    LabelScie = ifelse(RankScie == 1 | RankScie == n(), as.character(CNTSCHID), NA)
  )

# Find the maximum score to set the limits of the y-axis
max_score <- max(school_avg_scores$AvgMathScore, school_avg_scores$AvgReadScore, school_avg_scores$AvgScieScore)
max_rank <- max(school_avg_scores$RankMath, school_avg_scores$RankRead, school_avg_scores$RankScie, na.rm = TRUE) + 10
p <- ggplot(school_avg_scores) +
  geom_point(aes(x = RankMath, y = AvgMathScore, color = "Mathematics"), size = 0.5) +
  geom_point(aes(x = RankRead, y = AvgReadScore, color = "Reading"), size = 0.5) +
  geom_point(aes(x = RankScie, y = AvgScieScore, color = "Science"), size = 0.5) +
  geom_text(data = subset(school_avg_scores, !is.na(LabelMath)), 
            aes(x = ifelse(RankMath == 1, RankMath + 30, RankMath + 1), y = AvgMathScore, 
                label = ifelse(RankMath == 1, paste("Maths/Science =", LabelMath), "")), size = 2.5) +
  geom_text(data = subset(school_avg_scores, !is.na(LabelRead)), 
            aes(x = ifelse(RankRead == 1, RankRead + 35, RankRead + 1), y = AvgReadScore, 
                label = ifelse(RankRead == 1, paste("Reading =", LabelRead), "")), size = 2.5) +
  geom_text(data = subset(school_avg_scores, !is.na(LabelMath) & RankMath != 1), 
            aes(x = RankMath - 0.2, y = AvgMathScore - 120, 
                label = paste("Maths/Reading =", LabelMath)), size = 2.5) +
  geom_text(data = subset(school_avg_scores, !is.na(LabelScie) & RankScie != 1), 
            aes(x = RankScie - 0.2, y = AvgScieScore - 160, 
                label = paste("Science =", LabelScie)), size = 2.5) +
  scale_color_viridis_d() +
   scale_color_manual(values = c("Mathematics" = "darkblue", "Reading" = "orange", "Science" = "darkgreen")) +
  theme_ipsum() +
  labs(title = 'Distribution of Average Plausible Values by School',
       color = "") +  # Remove the word "Subject" from the legend
  theme(
    legend.position = "top",  # Move the legend to the top
    legend.justification = c(1, 1),  # Align the legend to the top-right corner
    legend.text = element_text(size = 11),  # Decrease legend text size to 11
    axis.title.x = element_text(size = 14, hjust = 0.5),  # Increase x-axis title size and center
    axis.title.y = element_text(size = 14, hjust = 0.5),  # Increase y-axis title size and center
    plot.title = element_text(size = 20, hjust = 0.5),  # Center the title
    plot.subtitle = element_text(size = 14),
    axis.text.x = element_blank(),  # Remove x-axis labels
    panel.grid.major.x = element_blank(),  # Remove vertical gridlines
    panel.grid.minor.x = element_blank()  # Remove vertical gridlines
  ) +
  xlab('International School ID') +
  ylab('Average Plausible Values') +
  coord_cartesian(xlim = c(0, max_rank + 2), ylim = c(0, max_score * 1.1))  # Adjusted coordinate limits

# Print the plot
print(p)

```

The data points create a descending trajectory from left to right, indicating that schools positioned at the left end of the spectrum generally exhibit higher average scores compared to those towards the right. This gradient suggests performance disparities across schools, with some institutions outperforming others.

The data presents noteworthy insights, particularly the exemplary performance in Mathematics and Science by the school labeled with ID 70200003. In contrast, the school assigned ID 70200149 is distinguished by its underachievement in both Mathematics and Reading.

## 3.3 Distribution of Average Plausible Values by Gender

```{r}
library(dplyr)
library(dplyr)
library(tidyr)
library(ggplot2)
library(hrbrthemes)  # Load hrbrthemes for theme_ipsum

# Assuming 'stu_qqq_Sg' is your data frame

# Prepare the data with gender and average scores
gender_scores <- stu_qqq_Sg %>%
  mutate(
    Gender = ifelse(ST004D01T == 1, "Female", "Male"),
    AvgMathPV = rowMeans(select(., starts_with("PV1MATH"):starts_with("PV10MATH")), na.rm = TRUE),
    AvgReadPV = rowMeans(select(., starts_with("PV1READ"):starts_with("PV10READ")), na.rm = TRUE),
    AvgSciePV = rowMeans(select(., starts_with("PV1SCIE"):starts_with("PV10SCIE")), na.rm = TRUE)
  )

# Reshape the data to long format
long_format <- gender_scores %>%
  select(CNTSTUID, Gender, AvgMathPV, AvgReadPV, AvgSciePV) %>%
  pivot_longer(
    cols = c(AvgMathPV, AvgReadPV, AvgSciePV),
    names_to = "Subject",
    values_to = "Score"
  ) %>%
  mutate(Subject = recode(Subject,
                          AvgMathPV = "Mathematics",
                          AvgReadPV = "Reading",
                          AvgSciePV = "Science"))

# Calculate averages for each group
group_averages <- long_format %>%
  group_by(Gender, Subject) %>%
  summarize(AvgScore = mean(Score, na.rm = TRUE), .groups = 'drop')

# Create the boxplot with gender colors and move the facet labels to the top
boxplot <- ggplot(long_format, aes(x = Gender, y = Score, fill = Gender)) +
  geom_boxplot() +
  geom_point(data = group_averages, aes(x = Gender, y = AvgScore, group = Gender), 
             color = "red", size = 2, show.legend = FALSE) +  # Change dot color to red
  geom_text(data = group_averages, aes(x = Gender, y = AvgScore, label = paste("Avg=", round(AvgScore, 1))), 
            nudge_y = 10, color = "black", size = 2.5, show.legend = FALSE, vjust = -1) +  # Remove fontface argument
  facet_wrap(~Subject, strip.position = "top", labeller = labeller(Subject = c(Mathematics = "Mathematics", Reading = "Reading", Science = "Science"))) +
  labs(
    title = "PV Score Distribution by Gender and Subject",
    x = "",
    y = "Average Plausible Values"
  ) +
  theme_ipsum(base_size = 16, base_family = "") +  # Set base font size to 16
  theme(
    legend.title = element_blank(),
    legend.position = "bottom",
    strip.text = element_text(size = 11, hjust = 0.5),  # Center facet labels and increase size
    axis.text.x = element_blank(),  # Remove x-axis labels
    axis.ticks.x = element_blank(),  # Remove x-axis ticks
    plot.title = element_text(size = 18, hjust = 0.5),  # Center plot title
    axis.text.y = element_text(size = 11, hjust = 0.5),  # Center y-axis text
    axis.title.y = element_text(size = 14, hjust = 0.5),  # Center y-axis title
    panel.grid.major.x = element_blank(),  # Remove vertical gridlines
    panel.grid.minor.x = element_blank()  # Remove vertical gridlines
  ) +
  scale_y_continuous(limits = c(0, NA), expand = expansion(mult = c(0, 0.05))) +  # Start y-axis at 0
  scale_fill_manual(values = c("Female" = "#FF69B4", "Male" = "#1E90FF"))

# Print the boxplot
print(boxplot)
```

The box plots illustrate the median scores (indicated by the line within each box), the interquartile range (the span of the box), and the range of the data (the "whiskers" extending from the boxes), which includes outliers (represented by the dots).

The red dots represent the mean scores and we can see that in Mathematics, male students have a slightly higher average score (579.5) compared to female students (568.2). The Reading scores show a more pronounced difference, with female students having a higher average score (552.9) than male students (532.4). In Science, the average scores are closer, with male students averaging 563.9 and female students averaging 558.

## 3.4 Relationship between HISEI and Average PV Scores

```{r}
library(ggplot2)
library(tidyr)
library(dplyr)
library(hrbrthemes)  # Load hrbrthemes for theme_ipsum

# Assuming 'df_hisei' is your data frame and it has been loaded correctly

# Reshaping the data
long_df_hisei <- df_hisei %>%
  pivot_longer(
    cols = c("AvgMathPV", "AvgReadPV", "AvgSciePV"),
    names_to = "Subject",
    values_to = "AveragePV"
  ) %>%
  mutate(Subject = recode(Subject,
                          "AvgMathPV" = "Math",
                          "AvgReadPV" = "Reading",
                          "AvgSciePV" = "Science"))

# Creating a scatter plot with ggplot2
ggplot(long_df_hisei, aes(x = HISEI, y = AveragePV, color = Subject)) +
  geom_point(size = 0.4, alpha = 0.5) +
  geom_smooth(method = "lm", se = FALSE, aes(group = Subject), size = 0.8) +  # Adjust the size for trend lines
  scale_color_manual(values = c("Math" = "darkblue", "Reading" = "orange", "Science" = "darkgreen")) +
  labs(title = 'Relationship between HISEI and Average PV Scores',
       x = 'HISEI',
       y = 'Average PV Score') +
  theme_ipsum() +
  theme(
    legend.title = element_blank(),
    legend.text = element_text(size = 12),  # Increase legend font size to 11
    legend.position = "bottom",  # Adjust legend position
    axis.title.x = element_text(size = 12, hjust = 0.5),  # Increase x-axis title font size and center
    axis.title.y = element_text(size = 12, hjust = 0.5),  # Increase y-axis title font size and center
    plot.title = element_text(size = 20, hjust = 0.5),  # Center main title and set font size to 20
    panel.grid.minor = element_blank()  # Remove minor gridlines
  ) +
  scale_x_continuous(limits = c(0, NA)) +  # Start x-axis at 0
  scale_y_continuous(limits = c(0, NA))  # Start y-axis at 0
```

The trend lines for each subject indicate a positive correlation between HISEI and the average PV scores, suggesting that as HISEI increases, so does the average score in these subjects. In other words, students with higher socio-economic backgrounds, as measured by their parents' occupational status, tend to score higher average PV scores.

However, the spread of the data points suggests there is variability that is not solely explained by HISEI. This indicates that while there is a trend, there are other factors at play influencing student performance in these subjects. The wide dispersion of scores at similar HISEI levels suggests that other factors may influence educational outcomes.

## 3.5 Relationship between ESCS and Average PV Scores

```{r}
library(ggplot2)
library(tidyr)
library(dplyr)
library(hrbrthemes)  # Load hrbrthemes for theme_ipsum

# Assuming 'df_escs' is your data frame and it has been loaded correctly

# Reshaping the data
long_df_escs <- df_escs %>%
  pivot_longer(
    cols = c("AvgMathPV", "AvgReadPV", "AvgSciePV"),
    names_to = "Subject",
    values_to = "AveragePV"
  ) %>%
  mutate(Subject = recode(Subject,
                          "AvgMathPV" = "Math",
                          "AvgReadPV" = "Reading",
                          "AvgSciePV" = "Science"))

# Creating a scatter plot with ggplot2
ggplot(long_df_escs, aes(x = ESCS, y = AveragePV, color = Subject)) +
  geom_point(size = 0.4, alpha = 0.5) +
  geom_smooth(method = "lm", se = FALSE, aes(group = Subject), size = 0.8) +  # Adjust the size for trend lines
  scale_color_manual(values = c("Math" = "darkblue", "Reading" = "orange", "Science" = "darkgreen")) +
  labs(title = 'Relationship between ESCS and Average PV Scores',
       x = 'ESCS',
       y = 'Average PV Score') +
  theme_ipsum() +
  theme(
    legend.title = element_blank(),
    legend.text = element_text(size = 12),  # Increase legend font size to 12
    legend.position = "bottom",  # Adjust legend position
    axis.title.x = element_text(size = 12, hjust = 0.5),  # Increase x-axis title font size to 14 and center
    axis.title.y = element_text(size = 12, hjust = 0.5),  # Increase y-axis title font size to 14 and center
    plot.title = element_text(size = 20, hjust = 0.5),  # Center main title and set font size to 18
    panel.grid.minor = element_blank()  # Remove minor gridlines
  ) +
  scale_x_continuous(limits = c(0, NA)) +  # Start x-axis at 0
  scale_y_continuous(limits = c(0, NA))  # Start y-axis at 0

```

All three subjects show a positive correlation between the ESCS and the average PV scores, as indicated by the upward trend of the lines fitted to the data points in each subject area. This suggests that students whose parents have higher index of economic, social and cultural status tend to achieve better average scores. The trend lines for each subject are quite close to one another, indicating that the relationship between ESCS and average PV scores is similar across all three subjects.

The scatter plot indicates a more concentrated distribution of data points around the trend line for each subject area when assessing the relationship between ESCS and average PV scores. This tighter clustering suggests that ESCS may have a more consistent association with student performance in Mathematics, Reading, and Science, compared to the broader spread observed with HISEI.

While the trend lines still point to a positive correlation—higher ESCS often correlates with higher PV scores—the reduced spread implies that ESCS could be a more reliable indicator of average scores. Nevertheless, the presence of scores outside the immediate vicinity of the trend lines does indicate that factors beyond ESCS also play a role in educational performance.
